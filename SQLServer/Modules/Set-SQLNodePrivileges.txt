Function Set-SQLNodePrivileges
{
    [CmdletBinding(DefaultParameterSetName = "Default", SupportsShouldProcess = $true)]
    param
    (
        [parameter(Mandatory = $true, ValueFromPipeline = $true)]
        [object]$ServiceAccount
    )
    $sidstr = $null
    
    try
    {
        $ntprincipal = New-Object System.Security.Principal.NTAccount "$ServiceAccount"
        $sidstr = ($ntprincipal.Translate([System.Security.Principal.SecurityIdentifier])).Value.ToString()
        $seceditExp = [System.IO.Path]::GetTempFileName()
        $seceditImp = [System.IO.Path]::GetTempFileName()
        
        $null = Invoke-Command { secedit /export /areas USER_RIGHTS /cfg $seceditExp }
        
        $privlineVP = Get-Content $seceditExp -Encoding Unicode | Select-String 'SeManageVolumePrivilege'
        if ($privlineVP -notlike "*$($sidstr)*")
        {
            Write-Verbose "Modify Setting 'Perform Volume Maintenance Tasks'..."
            (Get-Content $seceditExp -Encoding Unicode).Replace($privlineVP, "$privlineVP,*$sidstr") |
            Out-File $seceditExp -Encoding ascii
        }
        else
        {
            Write-Verbose "User Rights 'Perform Volume Maintenance Tasks' exists"
        }
        $privlineMP = Get-Content $seceditExp -Encoding ascii | Select-String 'SeLockMemoryPrivilege'
        if (-not ($privlineMP))
        {
            $privlineMP = Get-Content $seceditExp -Encoding ascii | Select-String 'Privilege Rights'
            if ($privlineMP)
            {
                Write-Verbose "Adding Setting 'Lock pages in memory'..."
                (Get-Content $seceditExp -Encoding ascii).Replace($privlineMP, "$privlineMP`r`nSeLockMemoryPrivilege = *$sidstr") |
                Out-File $seceditImp -Encoding ascii
            }
            else
            {
                Write-Verbose "User Rights 'Lock pages in memory' exists"
            }
        }
        elseif ($privlineMP -notlike "*$($sidstr)*")
        {
            Write-Verbose "Modify Setting 'Lock pages in memory'..."
            (Get-Content $seceditExp -Encoding Unicode).Replace($privlineMP, "$privlineMP,*$sidstr") |
            Out-File $seceditImp -Encoding ascii
            Get-Content $seceditImp -Encoding ascii | Select-String 'SeLockMemoryPrivilege'
        }
        Get-Content $seceditImp -Encoding ascii | Select-String 'SeManageVolumePrivilege' | Write-Debug
        Get-Content $seceditImp -Encoding ascii | Select-String 'SeLockMemoryPrivilege' | Write-Debug
        
        $null = Invoke-Command { secedit /configure /db secedit.sdb /cfg $seceditImp }
        
        Remove-Item $seceditExp, $seceditImp -Force -ErrorAction SilentlyContinue
    }
    
    catch
    {
        $message = $_.Exception.Message
        Throw "Error - Set-SQLNodePrivilege failed with the following error: '$($message)'"
    }
}
